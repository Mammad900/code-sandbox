{"version":3,"sources":["ui/splitter.js","uniqueid.js","ui/checkbox.js","ui/tabs.js","App.js","reportWebVitals.js","index.js"],"names":["Splitter","children","props","className","Section","lastId","CheckBox","checked","rest","React","useState","uniqueId","id","type","htmlFor","TabBar","currentTab","onChange","map","child","title","Tab","onSelect","selected","data-selected","onMouseDown","code","models","language","value","App","html","setHtml","iframeContent","setIframeContent","autoUpdate","setAutoUpdate","currentFile","setCurrentFile","onClick","height","path","defaultLanguage","defaultValue","line","loading","srcDoc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e471a59f.chunk.js","sourcesContent":["import React from 'react';\nimport './splitter.scss';\nexport default function Splitter({children, ...props}) {\n    return <div className=\"splitter\" {...props}>{children}</div>;\n}\n\nSplitter.Section= function SplitterSection({children, ...props}) {\n    return <div className=\"splitter-section\" {...props}>\n        <div className=\"section-content\">{children}</div>\n    </div>;\n}","// https://stackoverflow.com/a/29466744/13561926\n// I understand how it works, so no need to worry about copy-pasting\n// It will create unique ids with incrementing numbers. It will start at 1, and increment by 1 each time.\n// It will never return the same id twice.\n// eg. 'id1' will be returned the first time, 'id2' the second time, and so on.\n\nlet lastId = 0;\n\nexport default function uniqueId(prefix='id') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}\n","import React from 'react';\nimport uniqueId from '../uniqueid';\nimport './checkbox.scss'\nexport default function CheckBox({checked, children, ...rest}) {\n    const [id] = React.useState(uniqueId());\n    return (\n        <span className=\"checkbox\">\n            <input type=\"checkbox\" checked={checked} id={id} {...rest}/>\n            <label htmlFor={id}>{children}</label>\n        </span>\n  );\n}","import React from 'react';\nimport './tabs.scss'\n\nexport default function TabBar({ children, currentTab, onChange, ...rest }) {\n    return (\n        <div className=\"tabs\" {...rest}>\n            {children.map(child => {\n                let {title, id, ...rest} = child.props;\n                return <TabBar.Tab key={id} id={id} title={title} onSelect={onChange} selected={id===currentTab} {...rest}/>\n            })} \n        </div>\n    );\n}\n\nTabBar.Tab= function Tab({ id, onSelect, selected, title, ...rest }) {\n    return (\n        <div className=\"tab\" data-selected={selected} onMouseDown={()=>onSelect(id)} {...rest}>{title}</div>\n    );\n};","import React from 'react';\nimport './App.scss';\nimport Editor from '@monaco-editor/react'\nimport Splitter from './ui/splitter';\nimport CheckBox from './ui/checkbox';\nimport raw from 'raw.macro';\nimport TabBar from './ui/tabs';\nconst code = raw('./default-code.html'), defaultLine=10;\n\nvar models= {\n    \"index.html\": {\n        language: \"html\",\n        value: code\n    },\n    \"index.js\": {\n        language: \"javascript\",\n        value: \"// Coming soon\"\n    }\n}\n\nfunction App() {\n    var [html, setHtml] = React.useState(code);\n    var [iframeContent, setIframeContent] = React.useState('');\n    var [autoUpdate, setAutoUpdate] = React.useState(false);\n    var [currentFile, setCurrentFile] = React.useState('index.html');\n    return (\n        <div className=\"App\">\n            <div className=\"header\">\n                <button className=\"button\" onClick={()=>setIframeContent(html)}>Run</button>\n                <CheckBox checked={autoUpdate} onChange={()=>setAutoUpdate(!autoUpdate)}>Auto-update</CheckBox>\n            </div>\n            <Splitter>\n                <Splitter.Section>\n                    <TabBar currentTab={currentFile} onChange={setCurrentFile}>\n                        <TabBar.Tab title=\"HTML\" id=\"index.html\"/>\n                        <TabBar.Tab title=\"JS\" id=\"index.js\"/>\n                    </TabBar>\n                    <Editor height=\"100%\"\n                            path={currentFile}\n                            defaultLanguage={models[currentFile].language}\n                            defaultValue={models[currentFile].value}\n                            onChange={value=> {\n                                if(currentFile===\"index.html\"){\n                                    setHtml(value); \n                                }\n                                models[currentFile].value=value;\n                            }}\n                            line={defaultLine}\n                            loading={<div className=\"loading\"/>}/>\n                </Splitter.Section>\n                <Splitter.Section>\n                    <iframe srcDoc={autoUpdate? html : iframeContent} title=\"Result\"></iframe>\n                </Splitter.Section>\n            </Splitter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}